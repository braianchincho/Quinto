/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GraficoHistograma.java
 *
 * Created on 07-jun-2013, 15:49:08
 */

package intartificial;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GradientPaint;
import java.awt.image.BufferedImage;
import java.io.File;



import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;





/**
 *
 * @author Ani Rufinetto
 */
public class GraficoHistograma extends javax.swing.JDialog {
    private BufferedImage _image ;//para la imagen en memoria
    private JFreeChart grafico ;// el grafico
    private Dimension d;//dimension del grafico
   // private File arch=new File("histograma.jpg");;
    private ImageIcon imagen;
    /** Creates new form GraficoHistograma */
    public GraficoHistograma(java.awt.Frame parent, boolean modal,float[] frecuencias,String name) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
       // ImageIcon imagen=new ImageIcon("histograma.jpg");
       File arch=new File(name);
       crearHistograma(arch,frecuencias,jLabel3,"Histograma");


       //crearHistograma(arch1,frecEcualizadas,jLabel1,"Histograma Ecualizado");
     //  crearHistograma(frecuencias,jLabel1,"Histograma Ecualizado");
       
        // agregamos la imagen al label
      
        /*  imagen1 = new ImageIcon("ecualizacion.jpg");
        // agregamos la imagen al label
        jLabel1.setIcon(imagen1);
        //AGREGAMOS LA ETIQUETA QUE CONTIENE LA IMAGEN AL FRAME
         this.getContentPane().add(jLabel1);*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



private void crearHistograma(File arch,float[] g, JLabel jl,String titulo)
    {
       JFreeChart chart;


      DefaultCategoryDataset dataset = new DefaultCategoryDataset();

      try{
          


        for(int i=0;i<g.length;i++)
        {
           float x=g[i]; 
           
            //DecimalFormat df = new DecimalFormat("#.##");
            Comparable j=(i); 
            dataset.setValue(x, "", j);
          }
 
 chart = ChartFactory.createBarChart(titulo,"Niveles de Gris", "Frecuencia", dataset, PlotOrientation.VERTICAL,false,true,false);
//CategoryPlot plot =(CategoryPlot) chart.getPlot();
 CategoryPlot plot = chart.getCategoryPlot();
            ValueAxis axis = plot.getRangeAxis();
             axis.setAutoRange(false);
          //  axis.setRange(0,g[g.length-1]);


BarRenderer renderer = (BarRenderer)plot.getRenderer();
    renderer.setDrawBarOutline(false);
    
    //Dar color a cada barra
    GradientPaint gp0= new GradientPaint(0.0f,0.0f,Color.white,0.0f,0.0f,new Color(0,0,64));
                    renderer.setSeriesPaint(0,gp0);

    ChartUtilities.saveChartAsJPEG(arch, chart, 400, 250);


       _image = chart.createBufferedImage(500,250);
        jl.setIcon(new ImageIcon(_image));
        //AGREGAMOS LA ETIQUETA QUE CONTIENE LA IMAGEN AL FRAME
        this.getContentPane().add(jl);

      }

    catch (Exception e) {
       System.err.println("Error creando grafico.");
    }
     
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}
